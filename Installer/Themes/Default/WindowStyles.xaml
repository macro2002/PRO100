<ResourceDictionary x:Class="Installer.Theme.Default.WindowStyles"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:ClassModifier="public">
    
    <Style TargetType="Window" x:Key="BaseWindow">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Style="{DynamicResource WindowPanel}">
                        <Grid Background="White">
                            <AdornerDecorator>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="38"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Background="#FFE17661">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0" Name="AppIcon" Width="26" Height="26" Margin="7" Source="{TemplateBinding Icon}">
                                            <Image.Style>
                                                <Style TargetType="Image">
                                                    <Style.Triggers>
                                                        <Trigger Property="Source" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock Grid.Column="1" VerticalAlignment="Center" FontSize="14" Foreground="White"
                                                   Text="{DynamicResource title.App}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <Separator Grid.Column="2">
                                            <Separator.Style>
                                                <Style TargetType="Separator" BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Margin" Value="10,0,10,0"/>
                                                    <Setter Property="Width" Value="1"/>
                                                    <Setter Property="Height" Value="16"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Separator.Style>
                                        </Separator>
                                        <TextBlock Grid.Column="3" VerticalAlignment="Center" FontSize="14" Foreground="White"
                                                   Text="{TemplateBinding Title}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                                            <Setter Property="Foreground" Value="White" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=AppIcon, Path=Source}" Value="{x:Null}">
                                                            <Setter Property="Margin" Value="10,0,0,0"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <Button Grid.Column="4" x:Name="TurningButton" RenderOptions.EdgeMode="Aliased" Style="{DynamicResource TitleBarButtonStyle}" Click="OnMinimizeButtonClick">
                                            <Path Width="46" Height="24" Data="M 18,15 H 28" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                        </Button>

                                        <Button Grid.Column="5" x:Name="MaximizeButton" RenderOptions.EdgeMode="Aliased" Style="{DynamicResource TitleBarButtonStyle}" Click="OnMaximizeRestoreButtonClick">
                                            <Path Width="46" Height="32" Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                        </Button>

                                        <Button Grid.Column="5" x:Name="RestoreButton" RenderOptions.EdgeMode="Aliased" Style="{DynamicResource TitleBarButtonStyle}" Click="OnMaximizeRestoreButtonClick">
                                            <Path Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                        </Button>

                                        <Button Grid.Column="6" x:Name="CloseButton" RenderOptions.EdgeMode="Aliased" Style="{DynamicResource TitleBarCloseButtonStyle}" Click="OnCloseButtonClick">
                                            <Path Width="46" Height="32" Data="M 18,11 27,20 M 18,20 27,11" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                                        </Button>
                                    </Grid>
                                    <ContentPresenter Grid.Row="1"/>
                                </Grid>
                            </AdornerDecorator>
                            <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="false" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal"/>
                                <Condition Property="WindowStyle" Value="SingleBorderWindow"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="RestoreButton" Value="Collapsed" />
                                <Setter Property="Visibility" TargetName="MaximizeButton" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized"/>
                                <Condition Property="WindowStyle" Value="SingleBorderWindow"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="RestoreButton" Value="Visible" />
                                <Setter Property="Visibility" TargetName="MaximizeButton" Value="Collapsed" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="WindowStyle" Value="ToolWindow">
                            <Setter Property="Visibility" TargetName="TurningButton" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="RestoreButton" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="MaximizeButton" Value="Collapsed" />
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#19FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#19FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#19FFFFFF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#19FFFFFF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowPanel" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#3F000000"/>
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                <Setter Property="BorderThickness" Value="7" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
